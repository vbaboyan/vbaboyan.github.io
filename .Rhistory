else{wc.dset$Food.Name<-gsub(",.*","",wc.dset$Food.Name)
}
wc.dset$Food.Name<-as.factor(wc.dset$Food.Name)
wc.dset.corpus<-VCorpus(VectorSource(wc.dset$Food.Name))
wc.dset.corpus<-clean_corpus(wc.dset.corpus)
wc.dset.idf.tdm <-TermDocumentMatrix(wc.dset.corpus, control=list(weighting=weightTfIdf))
freq <- slam::row_sums(wc.dset.idf.tdm)
words <- names(freq)
wc<-ggwordcloud(words,
scale = c(3,1),
freq,
min.freq = 0,
max.words=400,
random.order=FALSE,
rot.per=0.5,
#random.color=T
colors=brewer.pal(8, "Dark2")
)
return(wc)
}
wc1<-wc.plot(green.dset3,"Nut and Seed Products")
wc2<-wc.plot(green.dset3,"Fruits and Fruit Juices")
wc3<-wc.plot(green.dset3,"Vegetables and Vegetable Products")
wc.plots<-grid.arrange(wc1,wc2,wc3,nrow=2,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
#edit the filename
ggsave(paste(figdir,"/wordclouds2.png",sep = ""),wc.plots,width =7,height = 5,dpi = 300)
clean_corpus <- function(corpus){
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removeWords, c(stopwords("en"), "sugar", "without"))
return(corpus)
}
wc.plot<-function(dset,cat){
wc.dset<-dset
#wc.dset<-green.dset3
wc.dset<-subset(wc.dset,subset = wc.dset$Food.Group==cat)
#clean food names
wc.dset$Food.Name<-as.character(wc.dset$Food.Name)
if(cat=="Nut and Seed Products"){
wc.dset$Food.Name<-gsub("with.*","",wc.dset$Food.Name)
wc.dset$Food.Name<-gsub("without.*","",wc.dset$Food.Name)
}
else{wc.dset$Food.Name<-gsub(",.*","",wc.dset$Food.Name)
}
wc.dset$Food.Name<-as.factor(wc.dset$Food.Name)
wc.dset.corpus<-VCorpus(VectorSource(wc.dset$Food.Name))
wc.dset.corpus<-clean_corpus(wc.dset.corpus)
wc.dset.idf.tdm <-TermDocumentMatrix(wc.dset.corpus, control=list(weighting=weightTfIdf))
freq <- slam::row_sums(wc.dset.idf.tdm)
words <- names(freq)
wc<-ggwordcloud(words,
scale = c(2,0.5),
freq,
min.freq = 0,
max.words=400,
random.order=FALSE,
rot.per=0.5,
#random.color=T
colors=brewer.pal(8, "Dark2")
)
return(wc)
}
wc1<-wc.plot(green.dset3,"Nut and Seed Products")
wc2<-wc.plot(green.dset3,"Fruits and Fruit Juices")
wc3<-wc.plot(green.dset3,"Vegetables and Vegetable Products")
wc.plots<-grid.arrange(wc1,wc2,wc3,nrow=2,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
#output<-grid.arrange(wc1,wc2,wc3, ncol=3,widths=1:3, heights=1:3)
#edit the filename
ggsave(paste(figdir,"/wordclouds2.png",sep = ""),wc.plots,width =7,height = 5,dpi = 300)
#Potassium-Rich Foods
thresh<-quantile(green.dset$Potasssium..mg.,0.90,na.rm = T)
green.dset2<-green.dset[green.dset$Potasssium..mg.>thresh,]
pie.dat<-as.data.frame(table(green.dset2$Food.Group)/sum(table(green.dset2$Food.Group)))
colnames(pie.dat)<-c("Group","Freq")
pie.labs<-paste(pie.dat$Group," (",round(pie.dat$Freq*100,digits = 3),"%)",sep = "")
mycols <- adjustcolor(palette(rainbow(nrow(pie.dat))), alpha.f = 0.3)
opal <- palette(mycols)
png(file=paste(figdir,"/Pie.png",sep = ""),height = 10,width = 10,units="in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 0.5,col = opal,cex=0.4)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),height = 5,width = 7,units="in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 0.5,col = opal,cex=0.4)
dev.off()
opal
opal
pie.labs
pie.dat$Freq
pie.dat$Freq*100
round(pie.dat$Freq*100,digits = 3)
pie.dat$Freq
round(pie.dat$Freq*10,digits = 3)
round(pie.dat$Freq*20,digits = 3)
round(pie.dat$Freq*30,digits = 3)
pie(pie.dat$Freq,labels = pie.labs,radius = 0.5,col = opal,cex=lab.cex)
lab.cex
lab.cex<-round(pie.dat$Freq*30,digits = 3)
pie(pie.dat$Freq,labels = pie.labs,radius = 0.5,col = opal,cex=lab.cex)
pie(pie.dat$Freq,labels = pie.labs,radius = 2,col = opal,cex=lab.cex)
lab.cex
pie.dat$Freq
lab.cex<-pie.dat$Freq
pie(pie.dat$Freq,labels = pie.labs,radius = 2,col = opal,cex=lab.cex)
pie(pie.dat$Freq,labels = pie.labs,radius = 2,col = opal,cex=0.5)
pie(pie.dat$Freq,labels = pie.labs,radius = 1.5,col = opal,cex=0.5)
pie(pie.dat$Freq,labels = pie.labs,radius = 1.8,col = opal,cex=0.5)
png(file=paste(figdir,"/Pie.png",sep = ""),height = 5,width = 7,units="in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1.8,col = opal,cex=0.5)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),height = 5,width = 5,units="in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1.8,col = opal,cex=0.5)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1.8,col = opal,cex=0.5)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1.8,col = opal,cex=0.5)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = .5,col = opal,cex=0.5)
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = .5,col = opal,cex=0.5)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.5)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1.5,col = opal,cex=0.5)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=150)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.2)
dev.off()
pie.dat
green.dset2$Food.Group
pie.dat<-as.data.frame(table(green.dset2$Food.Group)/sum(table(green.dset2$Food.Group)))
pie.dat
colnames(pie.dat)<-c("Group","Freq")
which(pie.dat$Freq<0.01)
pie.dat<-pie.dat[which(pie.dat$Freq>0.01),]
pie.labs<-paste(pie.dat$Group," (",round(pie.dat$Freq*100,digits = 3),"%)",sep = "")
mycols <- adjustcolor(palette(rainbow(nrow(pie.dat))), alpha.f = 0.3)
opal <- palette(mycols)
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.2)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 5,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.7)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 8,height = 5,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.7)
dev.off()
# remove stupid categories
good.cats<-unique(green.dset2$Food.Group)[c(6,8,9)]
pie.labs<-paste(pie.dat$Group," (",round(pie.dat$Freq*100,digits = 1),"%)",sep = "")
pie.labs
png(file=paste(figdir,"/Pie.png",sep = ""),width = 8,height = 5,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.7)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 4,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.7)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 4,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.4)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 4,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3)
dev.off()
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3,main = "The Percentage of High-Potassium Foods by Food Group")
png(file=paste(figdir,"/Pie.png",sep = ""),width = 4,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3,main = "The Percentage of High-Potassium Foods by Food Group")
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3,main = "The Percentage of High-Potassium Foods by Food Group")
dev.off()
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3,main = "The Percentage of High-Potassium Foods by Food Group",cex.main=0.6)
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3,main = "The Percentage of High-Potassium Foods by Food Group",cex.main=0.6)
dev.off()
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3,main = "The Percentage of High-Potassium Items Grouped by Food Category",cex.main=0.6)
dev.off()
#edit the filename
ggsave(paste(figdir,"/wordclouds2.pdf",sep = ""),wc.plots,width =7,height = 5,dpi = 300,useDingbats=FALSE))
ggsave(paste(figdir,"/wordclouds2.pdf",sep = ""),wc.plots,width =7,height = 5,dpi = 300,useDingbats=FALSE)
#edit the filename
ggsave(paste(figdir,"/wordclouds2.pdf",sep = ""),wc.plots,width =10,height = 5,dpi = 300,useDingbats=FALSE)
#edit the filename
ggsave(paste(figdir,"/wordclouds2.pdf",sep = ""),wc.plots,width =10,height = 7,dpi = 300,useDingbats=FALSE)
wc.plot<-function(dset,cat){
wc.dset<-dset
#wc.dset<-green.dset3
wc.dset<-subset(wc.dset,subset = wc.dset$Food.Group==cat)
#clean food names
wc.dset$Food.Name<-as.character(wc.dset$Food.Name)
if(cat=="Nut and Seed Products"){
wc.dset$Food.Name<-gsub("with.*","",wc.dset$Food.Name)
wc.dset$Food.Name<-gsub("without.*","",wc.dset$Food.Name)
}
else{wc.dset$Food.Name<-gsub(",.*","",wc.dset$Food.Name)
}
wc.dset$Food.Name<-as.factor(wc.dset$Food.Name)
wc.dset.corpus<-VCorpus(VectorSource(wc.dset$Food.Name))
wc.dset.corpus<-clean_corpus(wc.dset.corpus)
wc.dset.idf.tdm <-TermDocumentMatrix(wc.dset.corpus, control=list(weighting=weightTfIdf))
freq <- slam::row_sums(wc.dset.idf.tdm)
words <- names(freq)
wc<-ggwordcloud(words,
scale = c(3,0.5),
freq,
min.freq = 0,
max.words=400,
random.order=FALSE,
rot.per=0.1,
#random.color=T
colors=brewer.pal(8, "Dark2")
)
return(wc)
}
wc1<-wc.plot(green.dset3,"Nut and Seed Products")
wc2<-wc.plot(green.dset3,"Fruits and Fruit Juices")
wc3<-wc.plot(green.dset3,"Vegetables and Vegetable Products")
wc.plots<-grid.arrange(wc1,wc2,wc3,nrow=2,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
#edit the filename
ggsave(paste(figdir,"/wordclouds2.pdf",sep = ""),wc.plots,width =10,height = 7,dpi = 300,useDingbats=FALSE)
png(file=paste(figdir,"/Pie.png",sep = ""),width = 5,height = 3,units = "in",res=300)
par(mfrow=c(1,1))
pie(pie.dat$Freq,labels = pie.labs,radius = 1,col = opal,cex=0.3,main = "The Percentage of High-Potassium Items by Food Category",cex.main=0.6)
dev.off()
rbind(c(1,2), c(3,3)
)
wc.plot<-function(dset,cat){
wc.dset<-dset
#wc.dset<-green.dset3
wc.dset<-subset(wc.dset,subset = wc.dset$Food.Group==cat)
#clean food names
wc.dset$Food.Name<-as.character(wc.dset$Food.Name)
if(cat=="Nut and Seed Products"){
wc.dset$Food.Name<-gsub("with.*","",wc.dset$Food.Name)
wc.dset$Food.Name<-gsub("without.*","",wc.dset$Food.Name)
}
else{wc.dset$Food.Name<-gsub(",.*","",wc.dset$Food.Name)
}
wc.dset$Food.Name<-as.factor(wc.dset$Food.Name)
wc.dset.corpus<-VCorpus(VectorSource(wc.dset$Food.Name))
wc.dset.corpus<-clean_corpus(wc.dset.corpus)
wc.dset.idf.tdm <-TermDocumentMatrix(wc.dset.corpus, control=list(weighting=weightTfIdf))
freq <- slam::row_sums(wc.dset.idf.tdm)
words <- names(freq)
wc<-ggwordcloud(words,
scale = c(2,0.3),
freq,
min.freq = 0,
max.words=400,
random.order=FALSE,
rot.per=0.1,
#random.color=T
colors=brewer.pal(8, "Dark2")
)
return(wc)
}
wc1<-wc.plot(green.dset3,"Nut and Seed Products")
wc2<-wc.plot(green.dset3,"Fruits and Fruit Juices")
wc3<-wc.plot(green.dset3,"Vegetables and Vegetable Products")
wc.plots<-grid.arrange(wc1,wc2,wc3,nrow=2,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
#edit the filename
ggsave(paste(figdir,"/wordclouds2.pdf",sep = ""),wc.plots,width =10,height = 7,dpi = 300,useDingbats=FALSE)
### ### ### ### ### ### ###
### Food rankings using PCA
### ### ### ### ### ### ###
nb<-estim_ncpPCA(green.dset3[,3:6],ncp.max = 4)
res.comp<-imputePCA(green.dset3[,3:6],ncp=2)
green.pca<-princomp(res.comp$completeObs,scores = T)
autoplot(green.pca,data = green.dset3,colour="Food.Group",label=T,label.size=3,loadings=T,loadings.label = TRUE)
#autoplot(green.pca,data = green.dset3,colour="Food.Group",label=T,label.size=3,loadings=T,loadings.label = TRUE)
sorted.scores<-sort.int(green.pca$scores[,1],decreasing = T,index.return = T)
green.dset3[sorted.scores$ix,]
green.dset3[sorted.scores$ix,]
green.dset3[sorted.scores$ix,1]
pca.plot.dset$Group<-factor(green.dset3[sorted.scores$ix,1],levels = unique(green.dset3[sorted.scores$ix,1]))
pca.plot.dset<-green.dset3[sorted.scores$ix,]
pca.plot.dset$Group<-factor(green.dset3[sorted.scores$ix,1],levels = unique(green.dset3[sorted.scores$ix,1]))
pca.plot.dset
sorted.scores
green.dset3[sorted.scores$ix,]
pca.plot.dset<-green.dset3[sorted.scores$ix,]
pca.plot.dset$scores<-sorted.scores$x
pca.plot.dset
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge"))# +
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()
pca.plot
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+
)
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6))
pca.plot
pca.plot.dset
pca.plot.dset$Food.Name<-factor(pca.plot.dset$Food.Name,levels = pca.plot.dset$Food.Name)
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6)) #size=plsda.weights$font_wt,
pca.plot
pca.plot.dset[sort(pca.plot.dset$scores,decreasing = F)]
pca.plot.dset[sort(pca.plot.dset$scores,decreasing = F),]
sort(pca.plot.dset$scores,decreasing = F)
pca.plot.dset[order(pca.plot.dset$scores,decreasing = F),]
### ### ### ### ### ### ###
### Food rankings using PCA
### ### ### ### ### ### ###
nb<-estim_ncpPCA(green.dset3[,3:6],ncp.max = 4)
res.comp<-imputePCA(green.dset3[,3:6],ncp=2)
green.pca<-princomp(res.comp$completeObs,scores = T)
#autoplot(green.pca,data = green.dset3,colour="Food.Group",label=T,label.size=3,loadings=T,loadings.label = TRUE)
sorted.scores<-sort.int(green.pca$scores[,1],decreasing = T,index.return = T)
pca.plot.dset<-green.dset3[sorted.scores$ix,]
pca.plot.dset$scores<-sorted.scores$x
pca.plot.dset<-pca.plot.dset[order(pca.plot.dset$scores,decreasing = F),]
pca.plot.dset$Food.Name<-factor(pca.plot.dset$Food.Name,levels = pca.plot.dset$Food.Name)
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6)) #size=plsda.weights$font_wt,
pca.plot
grep(pca.plot.dset$Food.Name,"coconut",ignore.case = T)
grep(x = pca.plot.dset$Food.Name,pattern = "coconut",ignore.case = T)
pca.plot.dset[grep(x = pca.plot.dset$Food.Name,pattern = "coconut",ignore.case = T),]
pca.plot.dset$scores>0
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
pca.plot.dset<-pca.plot.dset[pca.plot.dset$scores>0,]
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6)) #size=plsda.weights$font_wt,
pca.plot
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+facet_wrap(~Food.Group)
pca.plot<-ggplot(pca.plot.dset, aes(Food.Name, scores, fill = Food.Group))+facet_wrap(~Food.Group)+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6)) #size=plsda.weights$font_wt,
pca.plot
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
#pca.plot.dset<-pca.plot.dset[pca.plot.dset$scores>0,]
waterfall<-function(dset,cat){
pca.dset<-subset(dset,dset$Food.Group==cat)
pca.dset$Food.Name<-factor(pca.dset$Food.Name,levels = pca.dset$Food.Name)
pca.plot<-ggplot(pca.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6))
return(pca.plot)
}
wf1<-waterfall(pca.plot.dset,"Nut and Seed Products")
wf1
nb<-estim_ncpPCA(green.dset3[,3:6],ncp.max = 4)
res.comp<-imputePCA(green.dset3[,3:6],ncp=2)
green.pca<-princomp(res.comp$completeObs,scores = T)
#autoplot(green.pca,data = green.dset3,colour="Food.Group",label=T,label.size=3,loadings=T,loadings.label = TRUE)
sorted.scores<-sort.int(green.pca$scores[,1],decreasing = T,index.return = T)
pca.plot.dset<-green.dset3[sorted.scores$ix,]
pca.plot.dset$scores<-sorted.scores$x
pca.plot.dset<-pca.plot.dset[order(pca.plot.dset$scores,decreasing = F),]
pca.plot.dset$Food.Name<-factor(pca.plot.dset$Food.Name,levels = pca.plot.dset$Food.Name)
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
#pca.plot.dset<-pca.plot.dset[pca.plot.dset$scores>0,]
waterfall<-function(dset,cat){
pca.dset<-subset(dset,dset$Food.Group==cat)
pca.dset$Food.Name<-factor(pca.dset$Food.Name,levels = pca.dset$Food.Name)
pca.plot<-ggplot(pca.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6))
return(pca.plot)
}
wf1<-waterfall(pca.plot.dset,"Nut and Seed Products")
wf1
wf2<-waterfall(pca.plot.dset,"Fruits and Fruit Juices")
wf3<-waterfall(pca.plot.dset,"Vegetables and Vegetable Products")
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=1,ncol=1,
layout_matrix = c(1,2,3))
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=1,ncol=3,
layout_matrix = c(1,2,3))
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=1,ncol=3,
layout_matrix = c(1,2,3))
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=1,ncol=3)
#plsda.weights$Network<-factor(plsda.weights$Network,levels = c("Default","Dorsal Attention","Frontoparietal","Limbic","Somatomotor","Ventral Attention","Visual"))
#pca.plot.dset<-pca.plot.dset[pca.plot.dset$scores>0,]
waterfall<-function(dset,cat,col){
pca.dset<-subset(dset,dset$Food.Group==cat)
pca.dset$Food.Name<-factor(pca.dset$Food.Name,levels = pca.dset$Food.Name)
pca.plot<-ggplot(pca.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
scale_fill_manual(values=col)+
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6))
return(pca.plot)
}
wf1<-waterfall(pca.plot.dset,"Nut and Seed Products","brown")
wf1
wf1<-waterfall(pca.plot.dset,"Nut and Seed Products","brown")
wf2<-waterfall(pca.plot.dset,"Fruits and Fruit Juices","orange")
wf3<-waterfall(pca.plot.dset,"Vegetables and Vegetable Products","green")
#size=plsda.weights$font_wt,
#  labs(title = "PLS-DA Principal Component Loadings",
#       subtitle = "Positive Weights Load on to BA44, Negative Weights Load on to vPMC",
#       x="ROI Labels",
#       y="PLS-DA Loadings")
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=1,ncol=3)
waterfall<-function(dset,cat,col){
pca.dset<-subset(dset,dset$Food.Group==cat)
pca.dset$Food.Name<-factor(pca.dset$Food.Name,levels = pca.dset$Food.Name)
pca.plot<-ggplot(pca.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge") +
scale_fill_manual(values=col)+
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6))+
labs(title = cat)
return(pca.plot)
}
wf1<-waterfall(pca.plot.dset,"Nut and Seed Products","brown")
wf2<-waterfall(pca.plot.dset,"Fruits and Fruit Juices","orange")
wf3<-waterfall(pca.plot.dset,"Vegetables and Vegetable Products","green")
#size=plsda.weights$font_wt,
#  labs(title = "PLS-DA Principal Component Loadings",
#       subtitle = "Positive Weights Load on to BA44, Negative Weights Load on to vPMC",
#       x="ROI Labels",
#       y="PLS-DA Loadings")
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=1,ncol=3)
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=1,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=2,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
ggsave(paste(figdir,"/pca.png",sep = ""),wc.plots,width =10,height = 10,dpi = 300)
ggsave(paste(figdir,"/pca.png",sep = ""),wf.plots,width =10,height = 10,dpi = 300)
ggsave(paste(figdir,"/pca.png",sep = ""),wf.plots,width =20,height = 20,dpi = 300)
waterfall<-function(dset,cat,col){
pca.dset<-subset(dset,dset$Food.Group==cat)
pca.dset$Food.Name<-factor(pca.dset$Food.Name,levels = pca.dset$Food.Name)
pca.plot<-ggplot(pca.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge",colour="white") +
scale_fill_manual(values=col)+
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6),legend.position = "none")+
labs(title = cat,y="Food Name")
return(pca.plot)
}
wf1<-waterfall(pca.plot.dset,"Nut and Seed Products","brown")
wf2<-waterfall(pca.plot.dset,"Fruits and Fruit Juices","orange")
wf3<-waterfall(pca.plot.dset,"Vegetables and Vegetable Products","green")
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=2,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
ggsave(paste(figdir,"/pca.png",sep = ""),wf.plots,width =20,height = 20,dpi = 300)
waterfall<-function(dset,cat,col){
pca.dset<-subset(dset,dset$Food.Group==cat)
pca.dset$Food.Name<-factor(pca.dset$Food.Name,levels = pca.dset$Food.Name)
pca.plot<-ggplot(pca.dset, aes(Food.Name, scores, fill = Food.Group))+
geom_bar(width = 1, stat = "identity",position="dodge",colour="white") +
scale_fill_manual(values=col)+
coord_flip()+theme_bw()+
theme(axis.text.y=element_text(size=6),legend.position = "none")+
labs(title = cat,x="Food Name",y="Scores")
return(pca.plot)
}
wf1<-waterfall(pca.plot.dset,"Nut and Seed Products","brown")
wf2<-waterfall(pca.plot.dset,"Fruits and Fruit Juices","orange")
wf3<-waterfall(pca.plot.dset,"Vegetables and Vegetable Products","green")
wf.plots<-grid.arrange(wf1,wf2,wf3,nrow=2,ncol=2,
layout_matrix = rbind(c(1,2), c(3,3)))
ggsave(paste(figdir,"/pca.png",sep = ""),wf.plots,width =20,height = 20,dpi = 300)
